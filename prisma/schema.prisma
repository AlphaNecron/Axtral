datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// TODO: Split embed options into a model.

model User {
  id               String    @id      @default(cuid())
  username         String    @unique
  name             String?
  password         String?
  avatar           Avatar?
  discord          Discord?
  email            String?   @unique
  emailVerified    DateTime?
  privateToken     String?   @unique
  roleName         String    @default("User")
  role             Role?     @relation(fields: [roleName], references: [name], onDelete: Cascade)
  embedEnabled     Boolean   @default(true)
  embedSiteName    String?   @default("Void")
  embedSiteNameUrl String?
  embedTitle       String?
  embedColor       String?   @default("#B794F4")
  embedDescription String?
  embedAuthor      String?
  embedAuthorUrl   String?
  domains          Domain[]
  files            File[]
  urls             Url[]
}

model Avatar {
  mimetype        String      @default("image/png")
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String      @unique
}

model Discord {
  id               String      @id
  accessToken      String      @unique
  refreshToken     String      @unique
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String      @unique
}

model Url {
  id          String   @id    @default(cuid())
  destination String
  short       String   @unique
  createdAt   DateTime        @default(now())
  password    String?
  views       Int      @default(0)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model Domain {
  name    String   @id
  addedAt DateTime @default(now())
  private Boolean  @default(false)
  Users   User[]   @relation()
}

model Role {
  name              String  @id
  color             String? @default("#B794F4")
  rolePriority      Int     @default(100)
  permissions       Int     @default(0)
  maxFileSize       BigInt  @default(104857600)
  maxFileCount      Int     @default(5)
  storageQuota      BigInt  @default(5368709120)
  users             User[]
}

model File {
  id            String   @id @default(uuid())
  fileName      String
  mimetype      String   @default("application/octet-stream")
  isExploding   Boolean  @default(false)
  isPrivate     Boolean  @default(false)
  size          BigInt   @default(0)
  slug          String   @unique
  uploadedAt    DateTime @default(now())
  deletionToken String   @unique
  views         Int      @default(0)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
}
