datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(cuid())
  username      String         @unique
  name          String?
  password      String?
  discord       Discord?
  email         String?        @unique
  emailVerified DateTime?
  embed         EmbedOptions?
  privateToken  String?        @unique
  roleName      String         @default("User")
  role          Role?          @relation(fields: [roleName], references: [name], onDelete: Cascade)
  domain        String?
  files         File[]
  urls          Url[]
  referralCodes ReferralCode[]
}

model EmbedOptions {
  id          String  @unique
  user        User    @relation(fields: [id], references: [id], onDelete: Cascade)
  enabled     Boolean @default(true)
  siteName    String? @default("Void")
  siteNameUrl String?
  title       String?
  color       String? @default("#B794F4")
  description String?
  author      String?
  authorUrl   String?
}

model Discord {
  id           String   @unique
  username     String
  tag          String
  accessToken  String   @unique
  refreshToken String   @unique
  expiresAt    DateTime
  avatar       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String   @unique
}

model Url {
  id          String   @id @default(cuid())
  destination String
  short       String   @unique
  createdAt   DateTime @default(now())
  password    String?
  views       Int      @default(0)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model Domain {
  id        String   @id @default(cuid())
  name      String   @unique
  addedAt   DateTime @default(now())
  isPrivate Boolean  @default(false)
  expiresAt DateTime
}

model Role {
  name         String  @id
  color        String? @default("#B794F4")
  rolePriority Int     @unique @default(100)
  permissions  Int     @default(0)
  maxFileSize  BigInt  @default(104857600)
  maxFileCount Int     @default(5)
  storageQuota BigInt  @default(5368709120)
  maxRefCodes  Int     @default(5)
  users        User[]
}

model File {
  id            String   @id @default(cuid())
  fileName      String
  mimetype      String   @default("application/octet-stream")
  isExploding   Boolean  @default(false)
  isPrivate     Boolean  @default(false)
  size          BigInt   @default(0)
  slug          String   @unique
  uploadedAt    DateTime @default(now())
  deletionToken String   @unique @default(cuid())
  views         Int      @default(0)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
}

model ReferralCode {
  code       String   @id @default(cuid())
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  consumedBy String?
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
}
